{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Background.svelte",
    "../../Question.svelte",
    "../../Result.svelte",
    "../../Error.svelte",
    "../../Card.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { csv } from 'd3-fetch';\n\timport { mean } from 'd3-array';\n\n\timport Background from './Background.svelte';\n\timport Question from './Question.svelte';\n\timport Result from './Result.svelte';\n\timport Error from './Error.svelte';\n\n\timport options from './options';\n\n\tlet loading = true;\n\n\tlet flags = [];\n\tlet filtered = [];\n\tcsv('./flags.csv').then(data => {\n\t\tdata.forEach(e => {\n\t\t\te.nbBars = Math.min(+e.nbBars, 4);\n\t\t\te.nbStars = +e.nbStars;\n\t\t\tif (e.nbStars > 1 && e.nbStars <= 5)\n\t\t\t\te.nbStars = 2;\n\t\t\telse if (e.nbStars > 5)\n\t\t\t\te.nbStars = 6;\n\t\t\te.layout = e.layout.split(',');\n\t\t\te.colors = e.colors.split(',');\n\t\t\te.figures = e.figures.split(',').map(d => d === '' ? 'none' : d);\n\t\t})\n\t\tflags = data;\n\t\tfiltered = flags;\n\t\tloading = false;\n\t\t// flags.forEach((flag1, i) => flags.forEach((flag2, j) => {\n\t\t// \tif (j <= i) return\n\t\t// \tif (flag1.nbBars === flag2.nbBars && flag1.nbStars === flag2.nbStars\n\t\t// \t\t&& flag1.layout.length === flag2.layout.length && flag1.layout.every(e1 => flag2.layout.some(e2 => e1 === e2))\n\t\t// \t\t&& flag1.colors.length === flag2.colors.length && flag1.colors.every(e1 => flag2.colors.some(e2 => e1 === e2))\n\t\t// \t\t&& flag1.figures.length === flag2.figures.length && flag1.figures.every(e1 => flag2.figures.some(e2 => e1 === e2)))\n\t\t// \t\tconsole.log(flag1.name, flag2.name);\n\t\t// }));\n\t\tconsole.log(Array.from(new Set(flags.reduce((acc, value) => [...acc, ...value.figures], []))))\n\t\tconsole.log(flags.filter(e => e.figures.includes(\"misc\")))\n\t});\n\n\t$: console.log(filtered);\n\n\tlet selected = [];\n\t$: console.log(selected);\n\n\tlet usedProperties = {};\n\tconst properties = [\n\t\t'layout',\n\t\t'colors',\n\t\t'figures',\n\t\t'nbBars',\n\t\t'nbStars'\n\t];\n\tlet index = 0;\n\t$: property = properties[index];\n\n\tlet mobile = window.matchMedia('(orientation: portrait)').matches;\n\twindow.addEventListener('resize', () => {\n\t\tmobile = window.matchMedia('(orientation: portrait)').matches;\n\t});\n\n\t$: isMultiple = ['layout', 'colors', 'figures'].includes(property);\n\n\t$: isAmbiguous = filtered.every((flag1, i) => filtered.every((flag2, j) => {\n\t\tif (j <= i) return true;\n\t\treturn (flag1.nbBars === flag2.nbBars && flag1.nbStars === flag2.nbStars\n\t\t\t&& flag1.layout.length === flag2.layout.length && flag1.layout.every(e1 => flag2.layout.some(e2 => e1 === e2))\n\t\t\t&& flag1.colors.length === flag2.colors.length && flag1.colors.every(e1 => flag2.colors.some(e2 => e1 === e2))\n\t\t\t&& flag1.figures.length === flag2.figures.length && flag1.figures.every(e1 => flag2.figures.some(e2 => e1 === e2)))\n\t}));\n\n\tconst getNextProperty = () => {\n\t\tconst availableProperties = properties\n\t\t\t.filter(e => !Object.keys(usedProperties).includes(e))\n\t\t\t.filter(e => !usedProperties.figures || !usedProperties.figures.includes('star') ? e !== 'nbStars' : e)\n\t\t\t.filter(e => !usedProperties.layout || !usedProperties.layout.some(e => e.startsWith('bars')) ? e !== 'nbBars' : e);\n\t\tconsole.log(availableProperties)\n\t\tconst averages = availableProperties.map(property => {\n\t\t\tconst sum = options[property].reduce((acc, option) => {\n\t\t\t\tconsole.log(property === 'nbBars' ?  +option.match(/\\d/)[0] : option, filtered.filter(e => {\n\t\t\t\t\tif (Array.isArray(e[property]))\n\t\t\t\t\t\treturn e[property].includes(property === 'nbBars' ?  +option.match(/\\d/)[0] : option);\n\t\t\t\t\treturn e[property] === option\n\t\t\t\t}).length)\n\t\t\t\treturn acc + filtered.filter(e => {\n\t\t\t\t\tif (Array.isArray(e[property]))\n\t\t\t\t\t\treturn e[property].includes(property === 'nbBars' ?  +option.match(/\\d/)[0] : option);\n\t\t\t\t\treturn e[property] === option\n\t\t\t\t}).length;\n\t\t\t}, 0);\n\t\t\treturn { [property]: sum / options[property].length };\n\t\t});\n\t\tconsole.log(averages)\n\t}\n\n\tconst filterFlags = () => {\n\t\tloading = true;\n\t\tif (property === 'nbBars')\n\t\t\tselected = selected.map(e => +option.match(/\\d/)[0]);\n\t\tconsole.log(selected, property, isMultiple)\n\t\tif (isMultiple) {\n\t\t\tfiltered = filtered.filter(e => selected.reduce((acc, value) => acc && e[property].includes(value), true));\n\t\t\tusedProperties = {\n\t\t\t\t...usedProperties,\n\t\t\t\t[property]: selected\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tfiltered = filtered.filter(e => e[property] === selected[0]);\n\t\t\tusedProperties = {\n\t\t\t\t...usedProperties,\n\t\t\t\t[property]: selected[0]\n\t\t\t};\n\t\t}\n\t\tconsole.log(filtered)\n\t\tconsole.log(usedProperties)\n\t\tconsole.log(isAmbiguous)\n\t\tgetNextProperty();\n\t\t// if (property === 'layout' && !selected.some(e => e.startsWith('bars')))\n\t\t// \tproperties = properties.filter(e => e !== 'nbBars');\n\t\tselected = [];\n\t\tif (filtered.length > 1 && index < properties.length - 1)\n\t\t\tindex++;\n\t\telse if (index >= properties.length - 1)\n\t\t\tfiltered = [];\n\t\tsetTimeout(() => loading = false, 0);\n\n\t}\n\n\tconst skipQuestion = () => {\n\t\tloading = true;\n\t\tselected = [];\n\t\tusedProperties = [...usedProperties, property];\n\t\tif (filtered.length > 1 && index < properties.length - 1)\n\t\t\tindex++;\n\t\tsetTimeout(() => loading = false, 0);\n\n\t}\n\n</script>\n\n{#if !mobile}\n\t<Background flags={flags} />\n{/if}\n{#if !loading}\n\t{#if filtered.length > 1}\n\t\t<Question\n\t\t\tproperty={property}\n\t\t\toptions={options[property]}\n\t\t\tmultiple={isMultiple}\n\t\t\tfiltered={filtered}\n\t\t\tbind:selected={selected}\n\t\t\ton:submit={filterFlags}\n\t\t\ton:skip={skipQuestion}\n\t\t/>\n\t{:else if filtered.length === 1}\n\t\t<Result found={filtered[0]} on:retry={() => {\n\t\t\tfiltered = flags;\n\t\t\tusedProperties = [];\n\t\t\tindex = 0;\n\t\t}} />\n\t{:else}\n\t\t<Error on:retry={() => {\n\t\t\tfiltered = flags;\n\t\t\tusedProperties = [];\n\t\t\tindex = 0;\n\t\t}} />\n\t{/if}\n\t<!-- {#each flags as flag}\n\t\t<img src='/assets/flags/{flag.code.toLowerCase()}.png' />\n\t{/each} -->\n{/if}\n\n<style lang='scss'>* {\n  box-sizing: border-box; }\n\nbody {\n  overflow-x: hidden; }\n\nmain {\n  text-align: center;\n  padding: 1em;\n  width: 75%;\n  margin: 0 auto; }\n  main h1 {\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 400; }\n  main h3 {\n    font-size: 1.4rem;\n    font-weight: 400;\n    color: #c69; }\n  main img {\n    margin: 0 auto; }\n  main .logo-large {\n    display: inline-block;\n    vertical-align: -1.5rem;\n    width: 8rem; }\n  main .logo-small {\n    display: none; }\n  @media (max-width: 48rem) {\n    main {\n      width: 100%; }\n      main h3 {\n        font-size: 1.2rem; }\n      main .logo-small {\n        display: inline-block;\n        vertical-align: middle;\n        width: 3rem;\n        padding: 0.2rem; }\n      main .logo-large {\n        display: none; } }\n/*# sourceMappingURL=src/App.svelte.map */</style>\n",
    "<script>\n\texport let flags;\n\n\t$: flags.sort(() => Math.random() >= 0.5);\n\n\tconst NB_FLAGS = 30;\n</script>\n\n<div class='wrapper'>\n\t{#each new Array(2) as _}\n\t\t<div>\n\t\t\t<div class='row'>\n\t\t\t\t{#each flags.slice(0, NB_FLAGS) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t\t{#each flags.slice(0, NB_FLAGS * 0.5) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t\t<div class='row'>\n\t\t\t\t{#each flags.slice(NB_FLAGS, NB_FLAGS * 2) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t\t{#each flags.slice(NB_FLAGS, NB_FLAGS * 1.5) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t\t<div class='row'>\n\t\t\t\t{#each flags.slice(NB_FLAGS * 2, NB_FLAGS * 3) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t\t{#each flags.slice(NB_FLAGS * 2, NB_FLAGS * 2.5) as flag}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='assets/flags/{flag.code.toLowerCase()}.png'\n\t\t\t\t\t\tstyle='width: calc(200vw / {NB_FLAGS});'\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</div>\n\t{/each}\n\t<!-- <div class='row'>\n\t\t{#each flags.slice(100, 150) as flag}\n\t\t\t<img src='assets/flags/{flag.code.toLowerCase()}.png' />\n\t\t{/each}\n\t\t{#each flags.slice(100, 125) as flag}\n\t\t\t<img src='assets/flags/{flag.code.toLowerCase()}.png' />\n\t\t{/each}\n\t</div> -->\n</div>\n\n<style lang='scss'>.wrapper {\n  width: 300vw;\n  height: 100%;\n  opacity: 0.5;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  -webkit-animation: marquee 60s linear infinite;\n          animation: marquee 60s linear infinite;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between; }\n  .wrapper .row {\n    width: 100%;\n    display: flex;\n    align-items: center; }\n\n@-webkit-keyframes marquee {\n  to {\n    left: -200vw; } }\n\n@keyframes marquee {\n  to {\n    left: -200vw; } }\n    .wrapper .row img {\n      margin: 1rem; }\n/*# sourceMappingURL=src/Background.svelte.map */</style>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\timport Card from './Card.svelte';\n\n\texport let property;\n\texport let options;\n\texport let multiple = false;\n\texport let filtered;\n\texport let selected;\n\n\tif (property === 'nbBars') {\n\t\toptions = options.filter(option => filtered[0].layout.some(e => option.startsWith(e)));\n\t\tconsole.log(options)\n\t}\n\n\tconst clickHandler = (value) => {\n\t\tif (multiple) {\n\t\t\tselected = (selected.includes(value))\n\t\t\t\t? selected.filter(e => e !== value)\n\t\t\t\t: [...selected, value];\n\t\t}\n\t\telse {\n\t\t\tselected = [value];\n\t\t}\n\t}\n\n\tconst dispatch = createEventDispatcher();\n\tconst submit = () => {\n\t\tdispatch('submit');\n\t}\n\n\tconst skip = () => {\n\t\tdispatch('skip');\n\t}\n</script>\n\n<Card>\n\t<h3>{property.toUpperCase()}</h3>\n\t<div class='grid'>\n\t\t{#each options as option}\n\t\t\t{#if property === 'colors'}\n\t\t\t\t<div\n\t\t\t\t\tclass='option {selected.includes(option) ? 'selected' : ''}'\n\t\t\t\t\tstyle='background-color: {option}; padding-top: calc(100% * 2/3);'\n\t\t\t\t\ton:click={() => clickHandler(option)}\n\t\t\t\t></div>\n\t\t\t{:else}\n\t\t\t\t<div\n\t\t\t\t\tclass='option {selected.includes(option) ? 'selected' : ''}'\n\t\t\t\t\ton:click={() => clickHandler(option)}\n\t\t\t\t>\n\t\t\t\t\t<img src='/assets/{property}/{option}.png' />\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t{/each}\n\t</div>\n\t<div>\n\t\t<button on:click={skip} class='skip'>\n\t\t\tSkip\n\t\t</button>\n\t\t<button on:click={submit} disabled={selected.length == 0}>\n\t\t\tNext\n\t\t</button>\n\t</div>\n</Card>\n\n<style lang='scss'>.grid {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 0.5rem; }\n  .grid .option {\n    width: auto;\n    cursor: pointer; }\n    .grid .option:hover {\n      opacity: 1; }\n    .grid .option.selected {\n      outline: 2px solid green; }\n    .grid .option img {\n      width: 100%;\n      height: 100%; }\n\nbutton {\n  margin-top: 2rem;\n  cursor: pointer; }\n\nbutton.skip {\n  border: none;\n  background-color: transparent;\n  color: grey; }\n/*# sourceMappingURL=src/Question.svelte.map */</style>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\timport Card from './Card.svelte';\n\n\texport let found;\n\n\tconst dispatch = createEventDispatcher();\n\tconst retry = () => {\n\t\tdispatch('retry');\n\t}\n\n</script>\n\n<Card>\n\t<h3>Is it {found.name.toUpperCase()}?</h3>\n\t<img src='/assets/flags/{found.code.toLowerCase()}.png' />\n\t<button on:click={retry}>\n\t\tIdentify another flag\n\t</button>\n</Card>\n\n<style lang='scss'>img {\n  display: block;\n  margin: 0 auto;\n  width: 200px; }\n\nbutton {\n  margin-top: 2rem;\n  cursor: pointer; }\n/*# sourceMappingURL=src/Result.svelte.map */</style>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\timport Card from './Card.svelte';\n\n\tconst dispatch = createEventDispatcher();\n\tconst retry = () => {\n\t\tdispatch('retry');\n\t}\n</script>\n\n<Card>\n\t<h3>I don't know this flag... Are you sure it exists?</h3>\n\t<button on:click={retry}>\n\t\tIdentify another flag\n\t</button>\n</Card>\n\n<style lang='scss'>button {\n  margin-top: 2rem;\n  cursor: pointer; }\n/*# sourceMappingURL=src/Error.svelte.map */</style>\n",
    "<script>\n\timport { fade, fly } from 'svelte/transition';\n</script>\n\n<div class='card' in:fly={{ x: 500, duration: 1000 }}>\n\t<slot></slot>\n</div>\n\n<style lang='scss'>* {\n  box-sizing: border-box; }\n\nbody {\n  overflow-x: hidden; }\n\n.card {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 60%;\n  padding: 1rem;\n  background-color: #e3e0ed;\n  box-shadow: 2px 2px 2px black;\n  display: flex;\n  flex-direction: column;\n  align-items: center; }\n  @media (max-width: 48rem) {\n    .card {\n      width: 80%; } }\n  @media (max-width: 32rem) {\n    .card {\n      width: 100%; } }\n/*# sourceMappingURL=src/Card.svelte.map */</style>\n"
  ],
  "names": [],
  "mappings": "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"
}